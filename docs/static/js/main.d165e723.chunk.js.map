{"version":3,"sources":["components/Main/StartPage/StartPage.module.scss","components/Main/Clients/ClientPage/ClientPage.module.scss","components/Authorization/Authorization.module.scss","components/Main/Main.module.scss","components/Main/Clients/AddClient/AddClient.module.scss","components/Main/Clients/ClientsList/ClientsList.module.scss","components/Main/StartPage/MainCalendar/MainCalendar.module.scss","components/Main/StartPage/ActionsHistory/ActionsHistory.module.scss","firebase.js","store/reducers/calendarReminderReducer.js","store/reducers/clientsReducer.js","store/reducers/profileReducer.js","store/reducers/actionsReducer.js","store/reducers/clientReducer.js","store/store.js","context/authContext.js","assets/images/logo.svg","components/Authorization/index.js","components/Authorization/Authorization.jsx","components/Registration/Registration.jsx","components/Registration/index.js","components/Main/Navigation/index.js","components/Main/Navigation/Navigation.jsx","components/Main/common/AddNavPanel/AddNavPanel.jsx","components/Main/Profile/Profile.jsx","components/Main/Profile/index.js","components/Main/common/Preloader/Preloader.jsx","components/Main/Clients/clientDataFormProps.js","components/Main/Clients/AddClient/index.js","components/Main/Clients/AddClient/AddClient.jsx","components/Main/common/Preloader/index.js","assets/images/to-client-page.svg","assets/images/empty-box.svg","components/Main/Clients/ClientsList/ClientsList.jsx","components/Main/Clients/ClientsList/index.js","assets/images/reset-clients-filter.svg","components/Main/Clients/SearchClient/index.js","components/Main/Clients/SearchClient/SearchClient.jsx","components/Main/Clients/index.js","components/Main/Clients/Clients.jsx","components/Main/common/AddNavPanel/index.js","components/Main/StartPage/MainCalendar/index.js","components/Main/StartPage/MainCalendar/MainCalendar.jsx","components/Main/StartPage/ActionsHistory/index.js","components/Main/StartPage/ActionsHistory/ActionsHistory.jsx","components/Main/StartPage/Reminder/Reminder.jsx","components/Main/StartPage/Reminder/index.js","components/Main/StartPage/index.js","components/Main/StartPage/StartPage.jsx","components/Main/Clients/ClientPage/index.js","components/Main/Clients/ClientPage/ClientPage.jsx","components/Main/index.js","components/Main/Main.jsx","App.js","reportWebVitals.js","index.js","components/Registration/Registration.module.scss","components/Main/Navigation/Navigation.module.scss","components/Main/Clients/SearchClient/SearchClient.module.scss","components/Main/StartPage/Reminder/Reminder.module.scss","components/Main/Profile/Profile.module.scss","components/Main/Clients/Clients.module.scss"],"names":["module","exports","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","firebase","apps","length","initializeApp","SET_DATE","SET_TASK","GET_TASKS","SET_ADD_TASK_MODE","SET_LOADING_STATUS","initialState","date","Date","tasks","addTaskMode","isDataLoading","setLoadingStatus","status","type","payload","getTasksForCurrentDate","data","dispatch","database","ref","id","once","val","getTasks","then","calendarReminderReducer","state","action","task","ADD_CLIENT","GET_CLIENTS","IS_CLIENTS_LOADING_STATUS","SET_FILTERED_CLIENTS","SET_FILTER_STATUS","clients","isClientsLoading","isFilter","setFilterStatus","setIsClientsLoadingStatus","showClients","getClients","clientsReducer","clientId","SET_USER_DATA","name","surname","email","profileReducer","SET_ACTION","SET_ACTIONS","SET_ACTIONS_LOADING_STATUS","actions","actionsLoadingStatus","actionsReducer","SET_CLIENT_DATA","GET_CLIENT_DATA","SET_CLIENT_LOADING_STATUS","client","isClientLoading","setIsClientLoadingStatus","clientReducer","store","createStore","combineReducers","currentUser","calendar","applyMiddleware","thunk","window","AuthContext","createContext","WEAK_PASSWORD_ERROR","INVALID_EMAIL_ERROR","SOME_ERROR","REQUIRED_ERROR","MAX_NAME_LENGTH","db","compose","withRouter","connect","setUserId","props","useState","user","setUser","isCheckingForUser","setIsCheckingForUser","emailError","setEmailError","passwordError","setPasswordError","isAuthenticating","setIsAuthenticating","clearErrors","useEffect","auth","onAuthStateChanged","uid","Provider","value","handleLogin","password","signInWithEmailAndPassword","history","push","catch","err","code","finally","handleRegistration","createUserWithEmailAndPassword","set","handleLogout","signOut","children","Authorization","useContext","className","src","authLogo","alt","initialValues","validationSchema","Yup","required","onSubmit","values","styles","form","handleSubmit","TextField","error","touched","errors","autoFocus","onChange","handleChange","onFocus","label","helperText","disabled","onClick","to","ONLY_CYRILLIC_SYMBOLS","Registration","classNames","formWrapper","confirmPassword","max","matches","min","oneOf","inputsWrapper","input","button","Navigation","navigation","workBlocks","exact","navigation__item","activeClassName","active","profileBlock","AddNavPanel","Profile","profile","setUpdatedUserData","updateUserData","isEditMode","setIsEditMode","profile__wrapper","profile__exitButton","profile__dataWrapper","profile__dataHeading","variant","Preloader","CircularProgress","MAX_WORK_LENGTH","MAX_ADDRESS_LENGTH","WRONG_ID_FORMAT","WRONG_PHONE_NUMBER_FORMAT","WRONG_EMAIL_FORMAT","RESERVED_ID","addClientInitialValues","patronymic","birthdate","sex","work","phone","address","addClientValidation","ids","shape","notOneOf","ensure","when","is","AddClient","addClient","clientsRef","key","setClient","transferActionData","actionsRef","actionId","time","setAction","useStore","clientsData","getState","console","log","split","reverse","join","toLocaleDateString","toLocaleTimeString","handleCloseAddClient","addClientForm","Boolean","InputLabelProps","shrink","FormControl","InputLabel","Select","labelId","MenuItem","FormHelperText","useStyles","makeStyles","tableContainer","border","maxWidth","height","width","backgroundColor","borderRadius","tableCell","wordBreak","table","overflow","ClientsList","classes","clientsTableWrapper","TableContainer","Table","size","stickyHeader","TableHead","TableRow","TableCell","TableBody","map","style","toClientPage","emptyBox","SearchClient","setFilter","setFilteredClients","filteredClients","toLowerCase","includes","handleCloseSearchClient","formProps","searchFormWrapper","resetButton","setFieldValue","resetButtonImg","reset","formInput","Clients","openAddClient","setOpenAddClient","openSearchClient","setOpenSearchClient","wrapper","title","searchClientButton","panelButton","addClientButton","Dialog","open","MainCalendar","setPickedDate","setDate","setAddTaskModeForCurrentDate","mode","calendarWrapper","onClickDay","replaceAll","currentDate","setHours","getTime","ActionsHistory","getActionsData","setActions","historyWrapper","i","overflowY","cell","whiteSpace","fontSize","Reminder","currentUserId","setTaskForCurrentDate","newRef","setTask","inputError","setInputError","onAddTaskHandler","trim","tableHeadingWrapper","tableHeading","heading","addTaskWrapper","inputProps","maxLength","placeholder","onKeyPress","e","target","addTaskButton","StartPage","pageWrapper","nav","contentWrapper","ClientPage","getCurrentClientData","getClientData","setCurrentClientData","setClientData","initValues","useParams","editMode","setEditMode","resetRef","useRef","tabsWrapper","current","resetForm","innerRef","fieldWrapper","inputLabel","Main","main__wrapper","path","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d165e723.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"StartPage_pageWrapper__3XIk8\",\"contentWrapper\":\"StartPage_contentWrapper__17ckV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ClientPage_form__1ahOf\",\"tabsWrapper\":\"ClientPage_tabsWrapper__2lfsL\",\"fieldWrapper\":\"ClientPage_fieldWrapper__3qjHV\",\"input\":\"ClientPage_input__1xqy_\",\"inputLabel\":\"ClientPage_inputLabel__2Qgs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Authorization_form__1Hdni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main__wrapper\":\"Main_main__wrapper__2-HkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addClientForm\":\"AddClient_addClientForm__Qh3ca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clientsTableWrapper\":\"ClientsList_clientsTableWrapper__QHi6S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarWrapper\":\"MainCalendar_calendarWrapper__rjWtS\",\"input\":\"MainCalendar_input__JeGzF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"historyWrapper\":\"ActionsHistory_historyWrapper__2yCtK\"};","import firebase from 'firebase';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: 'AIzaSyDXABBa26lbVbv3cmr44BoMNxRXMeSaPhg',\n  authDomain: 'banker-f9fc3.firebaseapp.com',\n  projectId: 'banker-f9fc3',\n  storageBucket: 'banker-f9fc3.appspot.com',\n  messagingSenderId: '647493756567',\n  appId: '1:647493756567:web:d08c88243400bc333b6bd2',\n  databaseURL:\n    'https://banker-f9fc3-default-rtdb.europe-west1.firebasedatabase.app/',\n};\n\nfunction initFirebase() {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(config);\n  }\n}\n\ninitFirebase();\n\nexport { firebase };\n","import { firebase } from './../../firebase';\n\nconst SET_DATE = 'SET_DATE';\nconst SET_TASK = 'SET_TASK';\nconst GET_TASKS = 'GET_TASKS';\nconst SET_ADD_TASK_MODE = 'SET_ADD_TASK_MODE';\nconst SET_LOADING_STATUS = 'SET_LOADING_STATUS';\n\nconst initialState = {\n  date: new Date(),\n  tasks: {},\n  addTaskMode: true,\n  isDataLoading: true,\n};\n\nconst setDate = (data) => ({\n  type: SET_DATE,\n  payload: {\n    date: data,\n  },\n});\n\nconst setAddTaskMode = (addTaskMode) => ({\n  type: SET_ADD_TASK_MODE,\n  payload: {\n    addTaskMode,\n  },\n});\n\nexport const setPickedDate = (data) => (dispatch) => {\n  dispatch(setDate(data));\n};\n\nconst setTask = (data) => ({\n  type: SET_TASK,\n  payload: {\n    task: data.task,\n    id: data.id,\n  },\n});\n\nconst getTasks = (data) => ({\n  type: GET_TASKS,\n  payload: {\n    tasks: data,\n  },\n});\n\nconst setLoadingStatus = (status) => ({\n  type: SET_LOADING_STATUS,\n  payload: {\n    status,\n  },\n});\n\nexport const getTasksForCurrentDate = (data) => (dispatch) => {\n  dispatch(setLoadingStatus(true));\n  firebase\n    .database()\n    .ref(`/users/${data.id}/tasks/${data.date}`)\n    .once('value', (val) => {\n      dispatch(getTasks({ ...val.val() }));\n    })\n    .then(() => {\n      dispatch(setLoadingStatus(false));\n    });\n};\n\nexport const setTaskForCurrentDate = (data) => (dispatch) => {\n  const newRef = firebase\n    .database()\n    .ref(`/users/${data.id}/tasks/${data.date}`)\n    .push();\n  const id = newRef.key;\n  newRef.set(data.task).then(() => {\n    dispatch(setTask({ task: data.task, id }));\n  });\n};\n\nexport const setAddTaskModeForCurrentDate = (data) => (dispatch) => {\n  dispatch(setAddTaskMode(data.mode));\n};\n\nconst calendarReminderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DATE:\n      return {\n        ...state,\n        date: action.payload.date,\n      };\n    case SET_TASK:\n      return {\n        ...state,\n        tasks: { ...state.tasks, [action.payload.id]: action.payload.task },\n      };\n    case GET_TASKS:\n      return {\n        ...state,\n        tasks: { ...action.payload.tasks },\n      };\n    case SET_ADD_TASK_MODE:\n      return {\n        ...state,\n        addTaskMode: action.payload.addTaskMode,\n      };\n    case SET_LOADING_STATUS:\n      return {\n        ...state,\n        isDataLoading: action.payload.status,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default calendarReminderReducer;\n","import { firebase } from './../../firebase';\n\nconst ADD_CLIENT = 'ADD_CLIENT';\nconst GET_CLIENTS = 'GET_CLIENTS';\nconst IS_CLIENTS_LOADING_STATUS = 'IS_CLIENTS_LOADING_STATUS';\nconst SET_FILTERED_CLIENTS = 'SET_FILTERED_CLIENTS';\nconst SET_FILTER_STATUS = 'SET_FILTER_STATUS';\n\nconst initialState = {\n  clients: {},\n  isClientsLoading: true,\n  isFilter: false,\n};\n\nconst setFilterStatus = (status) => ({\n  type: SET_FILTER_STATUS,\n  payload: {\n    status,\n  },\n});\n\nconst setClient = (clientId, data) => ({\n  type: ADD_CLIENT,\n  payload: {\n    clientId,\n    data,\n  },\n});\n\nconst setFilteredClients = (data) => ({\n  type: SET_FILTERED_CLIENTS,\n  payload: {\n    clients: data,\n  },\n});\n\nconst getClients = (data) => ({\n  type: GET_CLIENTS,\n  payload: {\n    clients: { ...data },\n  },\n});\n\nconst setIsClientsLoadingStatus = (status) => ({\n  type: IS_CLIENTS_LOADING_STATUS,\n  payload: {\n    status,\n  },\n});\n\nexport const addClient = (data) => (dispatch) => {\n  const clientsRef = firebase.database().ref(`/clients`).push();\n  const clientId = clientsRef.key;\n  clientsRef\n    .set({\n      name: data.name,\n      surname: data.surname,\n      patronymic: data.patronymic,\n      birthdate: data.birthdate,\n      sex: data.sex,\n      work: data.work,\n      id: data.id,\n      phone: data.phone,\n      email: data.email,\n      address: data.address,\n    })\n    .then(() => {\n      dispatch(setClient(clientId, data));\n    });\n};\n\nexport const showClients = (data) => (dispatch) => {\n  dispatch(setIsClientsLoadingStatus(true));\n  firebase\n    .database()\n    .ref(`/clients/`)\n    .once('value', (val) => {\n      dispatch(getClients({ ...val.val() }));\n    })\n    .then(() => {\n      dispatch(setIsClientsLoadingStatus(false));\n    });\n  dispatch(setFilterStatus(false));\n};\n\nexport const setFilter = (data) => (dispatch) => {\n  dispatch(setFilteredClients(data));\n  dispatch(setFilterStatus(true));\n};\n\nconst clientsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CLIENT:\n      return {\n        ...state,\n        clients: {\n          ...state.clients,\n          [action.payload.clientId]: action.payload.data,\n        },\n      };\n    case GET_CLIENTS:\n      return { ...state, clients: action.payload.clients };\n    case IS_CLIENTS_LOADING_STATUS:\n      return {\n        ...state,\n        isClientsLoading: action.payload.status,\n      };\n    case SET_FILTERED_CLIENTS:\n      return {\n        ...state,\n        clients: action.payload.clients,\n      };\n    case SET_FILTER_STATUS: {\n      return {\n        ...state,\n        isFilter: action.payload.status,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default clientsReducer;\n","import { firebase } from './../../firebase';\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst UPDATE_USER_DATA = 'UPDATE_USER_DATA';\n\nconst initialState = {\n  name: null,\n  surname: null,\n  email: null,\n  id: null,\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return {\n        ...state,\n        name: action.payload.name,\n        surname: action.payload.surname,\n        email: action.payload.email,\n        id: action.payload.id,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setUserData = (data) => ({\n  type: SET_USER_DATA,\n  payload: {\n    name: data.name,\n    surname: data.surname,\n    email: data.email,\n    id: data.id,\n  },\n});\n\nconst updateUserData = (data) => ({\n  type: UPDATE_USER_DATA,\n  payload: {\n    name: data.name,\n    surname: data.surname,\n  },\n});\n\nexport const setUpdatedUserData = (data) => (dispatch) => {\n  firebase.database().ref(`/users/${data.id}/name`).set(data.name);\n  firebase.database().ref(`/users/${data.id}/surname`).set(data.surname);\n  dispatch(updateUserData(data));\n};\n\nexport const setUserId = (id) => (dispatch) => {\n  firebase\n    .database()\n    .ref(`/users/${id}`)\n    .once('value', (val) => {\n      dispatch(setUserData({ ...val.val(), id }));\n    });\n};\n\nexport default profileReducer;\n","import { firebase } from './../../firebase';\n\nconst SET_ACTION = 'SET_ACTION';\nconst SET_ACTIONS = 'SET_ACTIONS';\nconst SET_ACTIONS_LOADING_STATUS = 'SET_ACTIONS_LOADING_STATUS';\n\nconst initialState = {\n  actions: {},\n  actionsLoadingStatus: true,\n};\n\nconst setAction = (data) => ({\n  type: SET_ACTION,\n  payload: {\n    action: data.action,\n    id: data.actionId,\n  },\n});\n\nconst setActions = (data) => ({\n  type: SET_ACTIONS,\n  payload: { actions: data },\n});\n\nconst setActionsLoadingStatus = (status) => ({\n  type: SET_ACTIONS_LOADING_STATUS,\n  payload: {\n    actionsLoadingStatus: status,\n  },\n});\n\nexport const getActionsData = (data) => (dispatch) => {\n  firebase\n    .database()\n    .ref(`/users/${data.id}/actions`)\n    .once('value', (val) => {\n      dispatch(setActions({ ...val.val() }));\n    })\n    .then(() => {\n      dispatch(setActionsLoadingStatus(false));\n    });\n};\n\nexport const transferActionData = (data) => (dispatch) => {\n  const actionsRef = firebase\n    .database()\n    .ref(`/users/${data.id}/actions`)\n    .push();\n  const actionId = actionsRef.key;\n  actionsRef\n    .set({ date: data.date, time: data.time, action: data.action })\n    .then(() => {\n      dispatch(setAction({ action: data.action, actionId }));\n    });\n};\n\nconst actionsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ACTION:\n      return {\n        ...state,\n        actions: {\n          ...state.actions,\n          [action.payload.id]: action.payload.action,\n        },\n      };\n    case SET_ACTIONS:\n      return {\n        ...state,\n        actions: { ...action.payload.actions },\n      };\n    case SET_ACTIONS_LOADING_STATUS:\n      return {\n        ...state,\n        actionsLoadingStatus: action.payload.status,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default actionsReducer;\n","import { firebase } from './../../firebase';\n\nconst SET_CLIENT_DATA = 'SET_CLIENT_DATA';\nconst GET_CLIENT_DATA = 'GET_CLIENT_DATA';\nconst SET_CLIENT_LOADING_STATUS = 'SET_CLIENT_LOADING_STATUS';\n\nconst initialState = {\n  client: {},\n  isClientLoading: true,\n};\n\nconst setIsClientLoadingStatus = (status) => ({\n  type: SET_CLIENT_LOADING_STATUS,\n  payload: {\n    status,\n  },\n});\n\nconst getClientData = (data) => ({\n  type: GET_CLIENT_DATA,\n  payload: {\n    data,\n  },\n});\n\nconst setClientData = (data) => ({\n  type: SET_CLIENT_DATA,\n  payload: {\n    data,\n  },\n});\n\nexport const getCurrentClientData = (data) => (dispatch) => {\n  dispatch(setIsClientLoadingStatus(true));\n  firebase\n    .database()\n    .ref(`/clients/${data}`)\n    .once('value', (val) => {\n      console.log({ ...val.val() });\n      dispatch(getClientData({ ...val.val() }));\n    })\n    .then(() => {\n      dispatch(setIsClientLoadingStatus(false));\n    });\n};\n\nexport const setCurrentClientData = (data) => (dispatch) => {\n  firebase.database().ref(`/clients/${data.id}`).set(data.client);\n  dispatch(setClientData(data.client));\n};\n\nconst clientReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CLIENT_DATA:\n      return {\n        ...state,\n        client: action.payload.data,\n      };\n    case GET_CLIENT_DATA:\n      return {\n        ...state,\n        client: action.payload.data,\n      };\n    case SET_CLIENT_LOADING_STATUS:\n      return {\n        ...state,\n        isClientLoading: action.payload.status,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default clientReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport calendarReminderReducer from './reducers/calendarReminderReducer';\nimport clientsReducer from './reducers/clientsReducer';\nimport profileReducer from './reducers/profileReducer';\nimport actionsReducer from './reducers/actionsReducer';\nimport clientReducer from './reducers/clientReducer';\n\nconst store = createStore(\n  combineReducers({\n    currentUser: profileReducer,\n    calendar: calendarReminderReducer,\n    clients: clientsReducer,\n    actions: actionsReducer,\n    client: clientReducer,\n  }),\n  applyMiddleware(thunk)\n);\n\nwindow.store = store;\nexport default store;\n","import { createContext, useState, useEffect } from 'react';\nimport { withRouter } from 'react-router';\nimport { firebase } from './../firebase';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { setUserId } from '../store/reducers/profileReducer';\n\nexport const AuthContext = createContext();\n\nexport const WEAK_PASSWORD_ERROR =\n  'Пароль должен состоять не менее чем из шести символов';\nexport const EMAIL_ALREADY_IN_USE_ERROR =\n  'Данный адрес электронной почты уже зарегистрирован';\nexport const INVALID_EMAIL_ERROR = 'Неверный элекронный адрес';\nexport const USER_NOT_FOUND_ERROR = 'Пользователь не найден';\nexport const USER_DISABLED_ERROR = 'Пользователь заблокирован';\nexport const WRONG_PASSWORD_ERROR =\n  'Неверен логин или пароль. Попробуйте снова или зарегистрируйтесь';\nexport const SOME_ERROR = 'Произошла ошибка';\nexport const REQUIRED_ERROR = 'Обязательное поле';\nexport const PASSWORD_MISMATCH_ERROR = 'Пароли должны совпадать';\nexport const TOO_MANY_REQUESTS_ERROR =\n  'Учетная запись временно заблокирована. Попробуйте авторизоваться позже';\nexport const MAX_NAME_LENGTH = 25;\nexport const MAX_SURNAME_LENGTH = 25;\n\nconst db = firebase.database();\n\nconst Auth = (props) => {\n  const [user, setUser] = useState('');\n  const [isCheckingForUser, setIsCheckingForUser] = useState(false);\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  };\n\n  const handleLogin = (email, password) => {\n    clearErrors();\n    setIsAuthenticating(true);\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        if (user) props.history.push('/main');\n      })\n      .catch((err) => {\n        switch (err.code) {\n          case 'auth/user-disabled':\n            setEmailError(USER_DISABLED_ERROR);\n            break;\n          case 'auth/invalid-email':\n          case 'auth/user-not-found':\n          case 'auth/wrong-password':\n            setPasswordError(WRONG_PASSWORD_ERROR);\n            break;\n          case 'auth/too-many-requests':\n            setPasswordError(TOO_MANY_REQUESTS_ERROR);\n            break;\n          default:\n            setEmailError(SOME_ERROR);\n            setPasswordError(SOME_ERROR);\n            break;\n        }\n      })\n      .finally(() => {\n        setIsAuthenticating(false);\n      });\n  };\n\n  const handleRegistration = (email, password, name, surname) => {\n    clearErrors();\n    setIsAuthenticating(true);\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .catch((err) => {\n        switch (err.code) {\n          case 'auth/email-already-in-use':\n            setEmailError(EMAIL_ALREADY_IN_USE_ERROR);\n            break;\n          case 'auth/invalid-email':\n            setEmailError(INVALID_EMAIL_ERROR);\n            break;\n          case 'auth/weak-password':\n            setPasswordError(WEAK_PASSWORD_ERROR);\n            break;\n          default:\n            setEmailError(SOME_ERROR);\n            setPasswordError(SOME_ERROR);\n            break;\n        }\n      })\n      .finally(() => {\n        setIsAuthenticating(false);\n      });\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        db.ref(`/users/${user.uid}`).set({\n          name,\n          surname,\n          email,\n        });\n      }\n    });\n  };\n\n  const handleLogout = () => {\n    firebase.auth().signOut();\n    props.history.push('/');\n  };\n\n  useEffect(() => {\n    setIsCheckingForUser(true);\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n        props.setUserId(user.uid);\n      } else {\n        setUser('');\n      }\n      setIsCheckingForUser(false);\n    });\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        emailError,\n        passwordError,\n        isAuthenticating,\n        isCheckingForUser,\n        handleLogin,\n        handleRegistration,\n        handleLogout,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default compose(withRouter, connect(null, { setUserId }))(Auth);\n","export default __webpack_public_path__ + \"static/media/logo.294a2208.svg\";","import Authorization from './Authorization';\n\nexport default Authorization;\n","import styles from './Authorization.module.scss';\nimport authLogo from './../../assets/images/logo.svg';\nimport { NavLink } from 'react-router-dom';\nimport './../../assets/styles/main.scss';\nimport { AuthContext } from '../../context/authContext.js';\nimport { useContext } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { REQUIRED_ERROR } from './../../context/authContext.js';\nimport { TextField } from '@material-ui/core';\n\nconst Authorization = (props) => {\n  const {\n    handleLogin,\n    emailError,\n    passwordError,\n    clearErrors,\n    isAuthenticating,\n  } = useContext(AuthContext);\n  return (\n    <div className=\"l-auth-reg__wrapper\">\n      <div className=\"l-auth-reg__form\">\n        <img src={authLogo} className=\"l-auth-reg__logo\" alt=\"auth-logo\" />\n        <h1 className=\"l-auth-reg__heading\">АВТОРИЗАЦИЯ</h1>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n          }}\n          validationSchema={Yup.object({\n            email: Yup.string().required(REQUIRED_ERROR),\n            password: Yup.string().required(REQUIRED_ERROR),\n          })}\n          onSubmit={(values) => {\n            handleLogin(values.email, values.password);\n          }}\n        >\n          {(props) => (\n            <form className={styles.form} onSubmit={props.handleSubmit}>\n              <TextField\n                error={\n                  passwordError ||\n                  emailError ||\n                  (props.touched.email && props.errors.email)\n                }\n                autoFocus={true}\n                onChange={props.handleChange}\n                value={props.values.email}\n                onFocus={clearErrors}\n                name=\"email\"\n                label=\"ЭЛЕКТРОННАЯ ПОЧТА\"\n                helperText={`${\n                  props.touched.email && props.errors.email\n                    ? props.errors.email\n                    : ''\n                }\\n${emailError ? emailError : ''}`}\n              />\n              <TextField\n                error={\n                  passwordError ||\n                  (props.touched.password && props.errors.password)\n                }\n                value={props.values.password}\n                onChange={props.handleChange}\n                name=\"password\"\n                onFocus={clearErrors}\n                label=\"ПАРОЛЬ\"\n                type=\"password\"\n                helperText={`${\n                  props.touched.password && props.errors.password\n                    ? props.errors.password\n                    : ''\n                }\\n${passwordError ? passwordError : ''}`}\n              />\n              <button\n                type=\"submit\"\n                disabled={isAuthenticating}\n                className=\"l-auth-reg__button\"\n              >\n                ВОЙТИ\n              </button>\n            </form>\n          )}\n        </Formik>\n\n        <div className=\"l-auth-reg__redirect\">\n          <span className=\"l-auth-reg__text\">НЕТ УЧЕТНОЙ ЗАПИСИ?&nbsp;</span>\n          <NavLink\n            onClick={clearErrors}\n            className=\"l-auth-reg__link\"\n            to=\"/registration\"\n          >\n            СОЗДАТЬ\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Authorization;\n","import styles from './Registration.module.scss';\nimport authLogo from './../../assets/images/logo.svg';\nimport classNames from 'classnames';\nimport './../../assets/styles/main.scss';\nimport { NavLink } from 'react-router-dom';\nimport { AuthContext } from '../../context/authContext.js';\nimport { useContext } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  INVALID_EMAIL_ERROR,\n  WEAK_PASSWORD_ERROR,\n  REQUIRED_ERROR,\n  PASSWORD_MISMATCH_ERROR,\n  MAX_NAME_LENGTH,\n  MAX_SURNAME_LENGTH,\n} from './../../context/authContext.js';\nimport { TextField } from '@material-ui/core';\n\nconst ONLY_CYRILLIC_SYMBOLS = 'Доступны только символы кириллического алфавита';\n\nconst Registration = () => {\n  const { handleRegistration, emailError, clearErrors, isAuthenticating } =\n    useContext(AuthContext);\n  return (\n    <div className=\"l-auth-reg__wrapper\">\n      <div className={classNames('l-auth-reg__form', styles.formWrapper)}>\n        <img src={authLogo} className=\"l-auth-reg__logo\" alt=\"auth-logo\" />\n        <h1 className=\"l-auth-reg__heading\">РЕГИСТРАЦИЯ</h1>\n        <Formik\n          initialValues={{\n            name: '',\n            surname: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string()\n              .max(\n                MAX_NAME_LENGTH,\n                `Имя должно иметь не более ${MAX_NAME_LENGTH} символов`\n              )\n              .matches(/^[А-Яа-я]+$/, ONLY_CYRILLIC_SYMBOLS)\n              .required(REQUIRED_ERROR),\n            surname: Yup.string()\n              .max(\n                MAX_NAME_LENGTH,\n                `Фамилия должна иметь не более ${MAX_SURNAME_LENGTH} символов`\n              )\n              .matches(/^[А-Яа-я]+$/, ONLY_CYRILLIC_SYMBOLS)\n              .required(REQUIRED_ERROR),\n            email: Yup.string()\n              .email(INVALID_EMAIL_ERROR)\n              .required(REQUIRED_ERROR),\n            password: Yup.string()\n              .required(REQUIRED_ERROR)\n              .matches(\n                /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{6,}/g,\n                'Слабый пароль'\n              )\n              .min(6, WEAK_PASSWORD_ERROR),\n            confirmPassword: Yup.string()\n              .required(REQUIRED_ERROR)\n              .oneOf([Yup.ref('password'), null], PASSWORD_MISMATCH_ERROR),\n          })}\n          onSubmit={(values) => {\n            handleRegistration(\n              values.email,\n              values.password,\n              values.name,\n              values.surname\n            );\n          }}\n        >\n          {(props) => (\n            <form className={styles.form} onSubmit={props.handleSubmit}>\n              <div className={styles.inputsWrapper}>\n                <TextField\n                  className={styles.input}\n                  error={props.touched.name && props.errors.name}\n                  label=\"ИМЯ\"\n                  value={props.values.name}\n                  onChange={props.handleChange}\n                  name=\"name\"\n                  helperText={\n                    props.touched.name && props.errors.name\n                      ? props.errors.name\n                      : null\n                  }\n                />\n                <TextField\n                  className={styles.input}\n                  error={props.touched.surname && props.errors.surname}\n                  label=\"ФАМИЛИЯ\"\n                  value={props.values.surname}\n                  onChange={props.handleChange}\n                  name=\"surname\"\n                  helperText={\n                    props.touched.surname && props.errors.surname\n                      ? props.errors.surname\n                      : null\n                  }\n                />\n                <TextField\n                  className={styles.input}\n                  error={\n                    emailError || (props.touched.email && props.errors.email)\n                  }\n                  value={props.values.email}\n                  onChange={props.handleChange}\n                  onFocus={clearErrors}\n                  label=\"ЭЛЕКТРОННАЯ ПОЧТА\"\n                  name=\"email\"\n                  helperText={`${\n                    props.touched.email && props.errors.email\n                      ? props.errors.email\n                      : ''\n                  }\\n${emailError ? emailError : ''}`}\n                />\n                <TextField\n                  className={styles.input}\n                  error={props.touched.password && props.errors.password}\n                  value={props.values.password}\n                  type=\"password\"\n                  label=\"ПАРОЛЬ\"\n                  onChange={props.handleChange}\n                  name=\"password\"\n                  helperText={\n                    props.touched.password && props.errors.password\n                      ? props.errors.password\n                      : null\n                  }\n                />\n                <TextField\n                  className={styles.input}\n                  error={\n                    props.touched.confirmPassword &&\n                    props.errors.confirmPassword\n                  }\n                  type=\"password\"\n                  label=\"ПОДТВЕРДИТЕ ПАРОЛЬ\"\n                  value={props.values.confirmPassword}\n                  onChange={props.handleChange}\n                  name=\"confirmPassword\"\n                  helperText={\n                    props.touched.confirmPassword &&\n                    props.errors.confirmPassword\n                      ? props.errors.confirmPassword\n                      : null\n                  }\n                />\n              </div>\n              <button\n                type=\"submit\"\n                disabled={isAuthenticating}\n                className={classNames('l-auth-reg__button', styles.button)}\n              >\n                ЗАРЕГИСТРИРОВАТЬСЯ\n              </button>\n            </form>\n          )}\n        </Formik>\n        <div className=\"l-auth-reg__redirect\">\n          <span className=\"l-auth-reg__text\">УЖЕ ЗАРЕГИСТРИРОВАНЫ?&nbsp;</span>\n          <NavLink onClick={clearErrors} className=\"l-auth-reg__link\" to={'/'}>\n            ВОЙТИ\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Registration;\n","import Registration from './Registration';\n\nexport default Registration;\n","import Navigation from './Navigation';\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport styles from './Navigation.module.scss';\n\nconst Navigation = (props) => {\n  return (\n    <nav className={styles.navigation}>\n      <div className={styles.workBlocks}>\n        <NavLink\n          exact\n          to=\"/main\"\n          className={styles.navigation__item}\n          activeClassName={styles.active}\n        >\n          Стартовая страница\n        </NavLink>\n        <NavLink\n          to=\"/main/clients\"\n          className={styles.navigation__item}\n          activeClassName={styles.active}\n        >\n          Клиенты\n        </NavLink>\n      </div>\n      <div className={styles.profileBlock}>\n        <NavLink\n          to=\"/main/profile\"\n          className={styles.navigation__item}\n          activeClassName={styles.active}\n        >\n          Профиль\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import './../../../../assets/styles/main.scss';\n\nconst AddNavPanel = (props) => {\n  return <div className={'panel'}>{props.children}</div>;\n};\n\nexport default AddNavPanel;\n","import { AuthContext } from '../../../context/authContext.js';\nimport { useContext, useState } from 'react';\nimport AddNavPanel from '../common/AddNavPanel/AddNavPanel.jsx';\nimport styles from './Profile.module.scss';\nimport './../../../assets/styles/main.scss';\nimport classNames from 'classnames';\nimport { connect } from 'react-redux';\nimport { setUpdatedUserData } from '../../../store/reducers/profileReducer.js';\nimport { Formik } from 'formik';\nimport { TextField } from '@material-ui/core';\nimport * as Yup from 'yup';\nimport {\n  INVALID_EMAIL_ERROR,\n  WEAK_PASSWORD_ERROR,\n  REQUIRED_ERROR,\n  PASSWORD_MISMATCH_ERROR,\n  MAX_NAME_LENGTH,\n  MAX_SURNAME_LENGTH,\n} from './../../../context/authContext';\n\nconst ONLY_CYRILLIC_SYMBOLS = 'Доступны только символы кириллического алфавита';\n\nconst Profile = (props) => {\n  const [isEditMode, setIsEditMode] = useState(false);\n  const { handleLogout, user } = useContext(AuthContext);\n  return (\n    <div className={styles.profile__wrapper}>\n      <AddNavPanel>\n        {isEditMode ? (\n          <button\n            className=\"c-add-nav-panel__text-button\"\n            onClick={() => setIsEditMode(!isEditMode)}\n            type=\"button\"\n          >\n            СОХРАНИТЬ\n          </button>\n        ) : (\n          <button\n            className=\"c-add-nav-panel__text-button\"\n            onClick={() => setIsEditMode(!isEditMode)}\n            form=\"profile-data-form\"\n            type=\"submit\"\n          >\n            РЕДАКТИРОВАТЬ\n          </button>\n        )}\n        <button\n          className={classNames(\n            'c-add-nav-panel__text-button',\n            styles.profile__exitButton\n          )}\n          onClick={handleLogout}\n          type=\"button\"\n        >\n          ВЫЙТИ\n        </button>\n      </AddNavPanel>\n      <Formik\n        initialValues={{\n          name: props.profile.name,\n          surname: props.profile.surname,\n          email: props.profile.email,\n        }}\n        validationSchema={Yup.object({\n          name: Yup.string()\n            .max(\n              MAX_NAME_LENGTH,\n              `Имя должно иметь не более ${MAX_NAME_LENGTH} символов`\n            )\n            .matches(/^[А-Яа-я]+$/, ONLY_CYRILLIC_SYMBOLS)\n            .required(REQUIRED_ERROR),\n          surname: Yup.string()\n            .max(\n              MAX_NAME_LENGTH,\n              `Фамилия должна иметь не более ${MAX_SURNAME_LENGTH} символов`\n            )\n            .matches(/^[А-Яа-я]+$/, ONLY_CYRILLIC_SYMBOLS)\n            .required(REQUIRED_ERROR),\n        })}\n        onSubmit={(values) => {\n          props.setUpdatedUserData({\n            name: values.name,\n            surname: values.surname,\n            id: user.uid,\n          });\n        }}\n      >\n        {(props) => (\n          <form\n            id=\"profile-data-form\"\n            className={styles.profile__dataWrapper}\n            onSubmit={props.handleSubmit}\n          >\n            <span className={styles.profile__dataHeading}>\n              ЭЛЕКТРОННАЯ ПОЧТА\n            </span>\n            <TextField variant=\"outlined\" disabled value={props.values.email} />\n            <span className={styles.profile__dataHeading}>ИМЯ</span>\n            <TextField\n              variant=\"outlined\"\n              disabled={!isEditMode}\n              onChange={props.handleChange}\n              name=\"name\"\n              value={props.values.name}\n            />\n            <span className={styles.profile__dataHeading}>ФАМИЛИЯ</span>\n            <TextField\n              variant=\"outlined\"\n              disabled={!isEditMode}\n              onChange={props.handleChange}\n              name=\"surname\"\n              value={props.values.surname}\n            />\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.currentUser,\n});\n\nexport default connect(mapStateToProps, { setUpdatedUserData })(Profile);\n","import Profile from './Profile';\n\nexport default Profile;\n","import CircularProgress from '@material-ui/core/CircularProgress';\nconst Preloader = () => {\n  return (\n    <div className=\"preloader__wrapper\">\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport default Preloader;\n","import * as Yup from 'yup';\n\nconst MAX_NAME_LENGTH = 25;\nconst MAX_SURNAME_LENGTH = 25;\nconst MAX_PATRONYMIC_LENGTH = 25;\nconst MAX_WORK_LENGTH = 150;\nconst MAX_ADDRESS_LENGTH = 200;\nconst REQUIRED_ERROR = 'Поле обязательно';\nconst ONLY_CYRILLIC_SYMBOLS = 'Доступны только символы кириллического алфавита';\nconst WRONG_ID_FORMAT = 'Неправильный формат идентификационного номера';\nconst WRONG_PHONE_NUMBER_FORMAT = 'Неправильный формат телефонного номера';\nconst WRONG_EMAIL_FORMAT = 'Неправильный формат адреса электронной почты';\nconst RESERVED_ID =\n  'Клиент с данным идентификациооным номером уже зарегистрирован. Проверьте вводимые данные';\n\nexport const addClientInitialValues = {\n  surname: '',\n  name: '',\n  patronymic: '',\n  birthdate: '',\n  sex: '',\n  id: '',\n  work: '',\n  phone: '',\n  email: '',\n  address: '',\n};\n\nexport const addClientValidation = (ids = []) =>\n  Yup.object().shape(\n    {\n      name: Yup.string()\n        .max(MAX_NAME_LENGTH, `Не более ${MAX_NAME_LENGTH} символов`)\n        .matches(/^[А-Яа-я]+$/, ONLY_CYRILLIC_SYMBOLS)\n        .required(REQUIRED_ERROR),\n      surname: Yup.string()\n        .max(MAX_NAME_LENGTH, `Не более ${MAX_SURNAME_LENGTH} символов`)\n        .matches(/^[А-Яа-я]+$/, ONLY_CYRILLIC_SYMBOLS)\n        .required(REQUIRED_ERROR),\n      patronymic: Yup.string()\n        .max(\n          MAX_PATRONYMIC_LENGTH,\n          `Не более ${MAX_PATRONYMIC_LENGTH} символов`\n        )\n        .matches(/^[А-Яа-я]+$/, ONLY_CYRILLIC_SYMBOLS)\n        .required(REQUIRED_ERROR),\n      birthdate: Yup.date().required(REQUIRED_ERROR),\n      sex: Yup.string().required(REQUIRED_ERROR),\n      work: Yup.string().max(\n        MAX_WORK_LENGTH,\n        `Не более ${MAX_WORK_LENGTH} символов`\n      ),\n      id: Yup.string()\n        .matches(/^[0-9]{7}[A-Z]{1}[0-9]{3}[A-Z]{2}[0-9]{1}$/, WRONG_ID_FORMAT)\n        .notOneOf(ids, RESERVED_ID)\n        .required(REQUIRED_ERROR),\n      phone: Yup.string()\n        .ensure()\n        .when(['email', 'address'], {\n          is: (email, address) => !email && !address,\n          then: Yup.string()\n            .matches(/^[+][0-9]{12}$/, WRONG_PHONE_NUMBER_FORMAT)\n            .required(REQUIRED_ERROR),\n        }),\n      email: Yup.string()\n        .ensure()\n        .email(WRONG_EMAIL_FORMAT)\n        .when(['phone', 'address'], {\n          is: (phone, address) => !phone && !address,\n          then: Yup.string().required(REQUIRED_ERROR),\n        }),\n      address: Yup.string()\n        .max(MAX_ADDRESS_LENGTH, `Не более ${MAX_ADDRESS_LENGTH} символов`)\n        .ensure()\n        .when(['phone', 'email'], {\n          is: (phone, email) => !phone && !email,\n          then: Yup.string().required(REQUIRED_ERROR),\n        }),\n    },\n    [\n      ['email', 'address'],\n      ['phone', 'address'],\n      ['phone', 'email'],\n    ]\n  );\n","import AddClient from './AddClient';\n\nexport default AddClient;\n","import styles from './AddClient.module.scss';\nimport './../../../../assets/styles/main.scss';\nimport { Formik } from 'formik';\nimport classNames from 'classnames';\nimport { addClient } from './../../../../store/reducers/clientsReducer.js';\nimport { connect, useStore } from 'react-redux';\nimport {\n  TextField,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  FormHelperText,\n} from '@material-ui/core';\nimport {\n  addClientInitialValues,\n  addClientValidation,\n} from '../clientDataFormProps';\nimport { transferActionData } from '../../../../store/reducers/actionsReducer';\nimport { useContext } from 'react';\nimport { AuthContext } from './../../../../context/authContext';\n\nconst AddClient = (props) => {\n  const store = useStore();\n  const { user } = useContext(AuthContext);\n  const clientsData = store.getState().clients.clients;\n  const ids = [];\n  for (let client in clientsData) {\n    ids.push(clientsData[client].id);\n  }\n  return (\n    <div>\n      <Formik\n        initialValues={addClientInitialValues}\n        validationSchema={addClientValidation(ids)}\n        onSubmit={(values) => {\n          console.log(values.birthdate);\n          props.addClient({\n            name: values.name,\n            surname: values.surname,\n            patronymic: values.patronymic,\n            birthdate: values.birthdate.split('-').reverse().join('.'),\n            sex: values.sex,\n            work: values.work,\n            id: values.id,\n            phone: values.phone,\n            email: values.email,\n            address: values.address,\n          });\n          props.transferActionData({\n            id: user.uid,\n            date: new Date().toLocaleDateString('ru'),\n            time: new Date().toLocaleTimeString('ru'),\n            action: `Заведена анкета клиента ${values.surname} ${values.name} ${values.patronymic} (ИН: ${values.id})`,\n          });\n          props.handleCloseAddClient();\n        }}\n      >\n        {(props) => (\n          <form\n            id=\"add-client-form\"\n            onSubmit={props.handleSubmit}\n            className={styles.addClientForm}\n          >\n            <TextField\n              onChange={props.handleChange}\n              value={props.values.surname}\n              name=\"surname\"\n              label=\"Фамилия\"\n              error={Boolean(props.touched.surname && props.errors.surname)}\n              helperText={\n                props.touched.surname && props.errors.surname\n                  ? props.errors.surname\n                  : null\n              }\n            />\n            <TextField\n              onChange={props.handleChange}\n              value={props.values.name}\n              name=\"name\"\n              label=\"Имя\"\n              error={Boolean(props.touched.name && props.errors.name)}\n              helperText={\n                props.touched.name && props.errors.name\n                  ? props.errors.name\n                  : null\n              }\n            />\n            <TextField\n              onChange={props.handleChange}\n              value={props.values.patronymic}\n              name=\"patronymic\"\n              label=\"Отчество\"\n              error={Boolean(\n                props.touched.patronymic && props.errors.patronymic\n              )}\n              helperText={\n                props.touched.patronymic && props.errors.patronymic\n                  ? props.errors.patronymic\n                  : null\n              }\n            />\n            <TextField\n              onChange={props.handleChange}\n              value={props.values.birthdate}\n              name=\"birthdate\"\n              type=\"date\"\n              label=\"Дата рождения\"\n              error={Boolean(props.touched.birthdate && props.errors.birthdate)}\n              helperText={\n                props.touched.birthdate && props.errors.birthdate\n                  ? props.errors.birthdate\n                  : null\n              }\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <FormControl error={Boolean(props.touched.sex && props.errors.sex)}>\n              <InputLabel id=\"new-client-sex-select\">Пол</InputLabel>\n              <Select\n                labelId=\"new-client-sex-select\"\n                name=\"sex\"\n                value={props.values.sex}\n                onChange={props.handleChange}\n              >\n                <MenuItem value=\"Мужчина\">Мужчина</MenuItem>\n                <MenuItem value=\"Женщина\">Женщина</MenuItem>\n              </Select>\n              <FormHelperText>\n                {props.touched.sex && props.errors.sex\n                  ? props.errors.sex\n                  : null}\n              </FormHelperText>\n            </FormControl>\n            <TextField\n              onChange={props.handleChange}\n              value={props.values.id}\n              name=\"id\"\n              label=\"Идентификационный номер\"\n              error={Boolean(props.touched.id && props.errors.id)}\n              helperText={\n                props.touched.id && props.errors.id ? props.errors.id : null\n              }\n            />\n            <TextField\n              onChange={props.handleChange}\n              value={props.values.work}\n              name=\"work\"\n              label=\"Место работы\"\n              error={Boolean(props.touched.work && props.errors.work)}\n              helperText={\n                props.touched.work && props.errors.work\n                  ? props.errors.work\n                  : null\n              }\n            />\n            <TextField\n              onChange={props.handleChange}\n              value={props.values.phone}\n              name=\"phone\"\n              label=\"Телефон\"\n              error={Boolean(props.touched.phone && props.errors.phone)}\n              helperText={\n                props.touched.phone && props.errors.phone\n                  ? props.errors.phone\n                  : null\n              }\n            />\n            <TextField\n              onChange={props.handleChange}\n              value={props.values.email}\n              name=\"email\"\n              label=\"Электронная почта\"\n              error={Boolean(props.touched.email && props.errors.email)}\n              helperText={\n                props.touched.email && props.errors.email\n                  ? props.errors.email\n                  : null\n              }\n            />\n            <TextField\n              onChange={props.handleChange}\n              value={props.values.address}\n              name=\"address\"\n              label=\"Адрес\"\n              error={Boolean(props.touched.address && props.errors.address)}\n              helperText={\n                props.touched.address && props.errors.address\n                  ? props.errors.address\n                  : null\n              }\n            />\n          </form>\n        )}\n      </Formik>\n      <div className={'c-form__buttons-wrapper'}>\n        <button\n          className={classNames('c-form__button', 'c-form__button_apply')}\n          type=\"submit\"\n          form=\"add-client-form\"\n        >\n          ДОБАВИТЬ\n        </button>\n        <button\n          className={classNames('c-form__button', 'c-form__button_cancel')}\n          type=\"button\"\n          onClick={props.handleCloseAddClient}\n        >\n          ОТМЕНИТЬ\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { addClient, transferActionData })(AddClient);\n","import Preloader from './Preloader';\n\nexport default Preloader;\n","export default __webpack_public_path__ + \"static/media/to-client-page.ac1ba8f2.svg\";","export default __webpack_public_path__ + \"static/media/empty-box.5ef6fb58.svg\";","import {\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableContainer,\n  makeStyles,\n} from '@material-ui/core';\nimport './../../../../assets/styles/main.scss';\nimport styles from './ClientsList.module.scss';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { showClients } from '../../../../store/reducers/clientsReducer';\nimport Preloader from './../../common/Preloader';\nimport toClientPage from './../../../../assets/images/to-client-page.svg';\nimport { NavLink } from 'react-router-dom';\nimport emptyBox from './../../../../assets/images/empty-box.svg';\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    border: '1px solid #ccc',\n    maxWidth: '100vw',\n    height: '100%',\n    '&::-webkit-scrollbar': {\n      width: '6px',\n      height: '6px',\n    },\n    '&::-webkit-scrollbar-track': {\n      backgroundColor: '#C5DEFB',\n      borderRadius: '5px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: '#60A9E0',\n      borderRadius: '5px',\n    },\n  },\n  tableCell: {\n    wordBreak: 'unset',\n  },\n  table: {\n    overflow: 'auto',\n    width: '100%',\n  },\n});\n\nconst ClientsList = (props) => {\n  const classes = useStyles();\n  useEffect(() => {\n    props.showClients();\n  }, []);\n  const clients = [];\n  for (let client in props.clients) {\n    clients.push({ client: props.clients[client], id: client });\n  }\n  if (props.isClientsLoading) {\n    return <Preloader />;\n  } else {\n    return (\n      <div className={styles.clientsTableWrapper}>\n        {clients.length ? (\n          <TableContainer className={classes.tableContainer}>\n            <Table size=\"small\" stickyHeader className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  <TableCell className={classes.tableCell}></TableCell>\n                  <TableCell className={classes.tableCell}>Фамилия</TableCell>\n                  <TableCell className={classes.tableCell}>Имя</TableCell>\n                  <TableCell className={classes.tableCell}>Отчество</TableCell>\n                  <TableCell className={classes.tableCell}>\n                    Дата рождения\n                  </TableCell>\n                  <TableCell className={classes.tableCell}>Пол</TableCell>\n                  <TableCell className={classes.tableCell}>\n                    Идентификационный номер\n                  </TableCell>\n                  <TableCell className={classes.tableCell}>\n                    Место работы\n                  </TableCell>\n                  <TableCell className={classes.tableCell}>Телефон</TableCell>\n                  <TableCell className={classes.tableCell}>\n                    Электронная почта\n                  </TableCell>\n                  <TableCell className={classes.tableCell}>Адрес</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {clients.map((client) => (\n                  <TableRow key={client.id} style={{ height: 'max-content' }}>\n                    <TableCell>\n                      <NavLink to={`/main/clients/${client.id}/data`}>\n                        <img src={toClientPage} alt=\"user icon\" />\n                      </NavLink>\n                    </TableCell>\n                    <TableCell>{client.client.surname}</TableCell>\n                    <TableCell>{client.client.name}</TableCell>\n                    <TableCell>{client.client.patronymic}</TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {client.client.birthdate.split('-').reverse().join('.')}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {client.client.sex}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {client.client.id}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {client.client.work}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {client.client.phone}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {client.client.email}\n                    </TableCell>\n                    <TableCell className={classes.tableCell}>\n                      {client.client.address}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        ) : (\n          <div className=\"c-empty-container__wrapper\">\n            <img\n              src={emptyBox}\n              className=\"c-empty-container__img\"\n              alt=\"empty icon\"\n            />\n            <p className=\"c-empty-container__text\">Клиенты отсутствуют</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  clients: state.clients.clients,\n  isClientsLoading: state.clients.isClientsLoading,\n});\n\nexport default connect(mapStateToProps, { showClients })(ClientsList);\n","import ClientsList from './ClientsList';\n\nexport default ClientsList;\n","export default __webpack_public_path__ + \"static/media/reset-clients-filter.7200115a.svg\";","import SearchClient from './SearchClient';\n\nexport default SearchClient;\n","import { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport { TextField } from '@material-ui/core';\nimport styles from './SearchClient.module.scss';\nimport './../../../../assets/styles/main.scss';\nimport classNames from 'classnames';\nimport { setFilter } from '../../../../store/reducers/clientsReducer';\nimport reset from './../../../../assets/images/reset-clients-filter.svg';\n\nconst SearchClient = (props) => {\n  return (\n    <Formik\n      initialValues={{\n        surname: '',\n        name: '',\n        patronymic: '',\n        id: '',\n      }}\n      onSubmit={(values) => {\n        const filteredClients = {};\n        for (let client in props.clients) {\n          if (\n            props.clients[client].surname\n              .toLowerCase()\n              .includes(values.surname.toLowerCase()) &&\n            props.clients[client].name\n              .toLowerCase()\n              .includes(values.name.toLowerCase()) &&\n            props.clients[client].patronymic\n              .toLowerCase()\n              .includes(values.patronymic.toLowerCase()) &&\n            props.clients[client].id\n              .toLowerCase()\n              .includes(values.id.toLowerCase())\n          ) {\n            filteredClients[client] = props.clients[client];\n          }\n        }\n        props.setFilter(filteredClients);\n        props.handleCloseSearchClient();\n      }}\n    >\n      {(formProps) => {\n        return (\n          <div className={styles.searchFormWrapper}>\n            <button\n              className={styles.resetButton}\n              onClick={() => {\n                formProps.setFieldValue('name', '');\n                formProps.setFieldValue('surname', '');\n                formProps.setFieldValue('patronymic', '');\n                formProps.setFieldValue('id', '');\n              }}\n            >\n              <img\n                className={styles.resetButtonImg}\n                src={reset}\n                alt=\"search icon\"\n              />\n            </button>\n            <form\n              className={styles.form}\n              onSubmit={formProps.handleSubmit}\n              id=\"search-client-form\"\n            >\n              <TextField\n                className={styles.formInput}\n                value={formProps.values.surname}\n                label=\"Фамилия\"\n                name=\"surname\"\n                onChange={formProps.handleChange}\n              />\n              <TextField\n                className={styles.formInput}\n                value={formProps.values.name}\n                label=\"Имя\"\n                name=\"name\"\n                onChange={formProps.handleChange}\n              />\n              <TextField\n                className={styles.formInput}\n                value={formProps.values.patronymic}\n                label=\"Отчетсво\"\n                name=\"patronymic\"\n                onChange={formProps.handleChange}\n              />\n              <TextField\n                className={styles.formInput}\n                value={formProps.values.id}\n                label=\"Идентификационный номер\"\n                name=\"id\"\n                onChange={formProps.handleChange}\n              />\n            </form>\n            <div className={'c-form__buttons-wrapper'}>\n              <button\n                type=\"submit\"\n                disabled={\n                  !(\n                    formProps.values.name ||\n                    formProps.values.surname ||\n                    formProps.values.patronymic ||\n                    formProps.values.id\n                  )\n                }\n                form=\"search-client-form\"\n                className={classNames('c-form__button', 'c-form__button_apply')}\n              >\n                Найти\n              </button>\n              <button\n                type=\"button\"\n                className={classNames('c-form__button', 'c-form_button_cancel')}\n                onClick={props.handleCloseSearchClient}\n              >\n                Отменить\n              </button>\n            </div>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nconst mapDispatchToProps = (state) => ({\n  clients: state.clients.clients,\n});\n\nexport default connect(mapDispatchToProps, { setFilter })(SearchClient);\n","import Clients from './Clients';\n\nexport default Clients;\n","import AddNavPanel from '../common/AddNavPanel/AddNavPanel.jsx';\nimport Dialog from '@material-ui/core/Dialog';\nimport styles from './Clients.module.scss';\nimport './../../../assets/styles/main.scss';\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport AddClient from './AddClient';\nimport ClientsList from './ClientsList';\nimport SearchClient from './SearchClient';\nimport { connect } from 'react-redux';\nimport { showClients } from '../../../store/reducers/clientsReducer.js';\n\nconst Clients = (props) => {\n  const [openAddClient, setOpenAddClient] = useState(false);\n  const handleClickOpenAddClient = () => {\n    setOpenAddClient(true);\n  };\n  const handleCloseAddClient = () => {\n    setOpenAddClient(false);\n  };\n  const [openSearchClient, setOpenSearchClient] = useState(false);\n  const handleClickOpenSearchClient = () => {\n    setOpenSearchClient(true);\n  };\n  const handleCloseSearchClient = () => {\n    setOpenSearchClient(false);\n  };\n  return (\n    <div className={styles.wrapper}>\n      <AddNavPanel>\n        <button\n          title=\"Найти клиента\"\n          onClick={handleClickOpenSearchClient}\n          className={classNames(styles.searchClientButton, styles.panelButton)}\n        ></button>\n        <button\n          title=\"Добавить клиента\"\n          onClick={handleClickOpenAddClient}\n          className={classNames(styles.addClientButton, styles.panelButton)}\n        ></button>\n        {props.isFilter ? (\n          <button\n            className=\"c-add-nav-panel__text-button\"\n            onClick={props.showClients}\n          >\n            Очистить фильтр\n          </button>\n        ) : null}\n      </AddNavPanel>\n      <ClientsList />\n      <Dialog open={openAddClient}>\n        <AddClient handleCloseAddClient={handleCloseAddClient} />\n      </Dialog>\n      <Dialog open={openSearchClient}>\n        <SearchClient handleCloseSearchClient={handleCloseSearchClient} />\n      </Dialog>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (state) => ({\n  isFilter: state.clients.isFilter,\n});\n\nexport default connect(mapDispatchToProps, { showClients })(Clients);\n","import AddNavPanel from './AddNavPanel';\n\nexport default AddNavPanel;\n","import MainCalendar from './MainCalendar';\n\nexport default MainCalendar;\n","import {\n  getTasksForCurrentDate,\n  setPickedDate,\n  setAddTaskModeForCurrentDate,\n} from './../../../../store/reducers/calendarReminderReducer';\nimport Calendar from 'react-calendar';\nimport styles from './MainCalendar.module.scss';\nimport { connect } from 'react-redux';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../../../context/authContext';\n\nconst MainCalendar = (props) => {\n  const { user } = useContext(AuthContext);\n  const onDateChangeHandler = (date) => {\n    props.setPickedDate(date);\n    props.getTasksForCurrentDate({\n      id: user.uid,\n      date: date.toLocaleDateString('ru').replaceAll('.', '-'),\n    });\n    const currentDate = new Date();\n    currentDate.setHours(0, 0, 0, 0);\n    if (date.getTime() >= currentDate.getTime()) {\n      props.setAddTaskModeForCurrentDate({ mode: true });\n    } else {\n      props.setAddTaskModeForCurrentDate({ mode: false });\n    }\n  };\n  return (\n    <div className={styles.calendarWrapper}>\n      <Calendar value={props.date} onClickDay={onDateChangeHandler} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  date: state.calendar.date,\n});\n\nexport default connect(mapStateToProps, {\n  setPickedDate,\n  getTasksForCurrentDate,\n  setAddTaskModeForCurrentDate,\n})(MainCalendar);\n","import ActionsHistory from './ActionsHistory';\n\nexport default ActionsHistory;\n","import styles from './ActionsHistory.module.scss';\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n} from '@material-ui/core';\nimport './../../../../assets/styles/main.scss';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getActionsData } from '../../../../store/reducers/actionsReducer';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../../../context/authContext';\nimport Preloader from './../../common/Preloader';\nimport emptyBox from './../../../../assets/images/empty-box.svg';\n\nconst ActionsHistory = (props) => {\n  const { user } = useContext(AuthContext);\n  useEffect(() => {\n    props.getActionsData({ id: user.uid });\n  }, []);\n  const actions = [];\n  for (let action in props.actions) {\n    actions.push(props.actions[action]);\n  }\n  actions.reverse();\n  return (\n    <div className={styles.historyWrapper}>\n      <h1>История действий</h1>\n      {props.actionsLoadingStatus ? (\n        <Preloader />\n      ) : actions.length ? (\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Дата</TableCell>\n                <TableCell>Время</TableCell>\n                <TableCell>Действие</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {actions.map((action, i) => (\n                <TableRow key={i}>\n                  <TableCell>{action.date}</TableCell>\n                  <TableCell>{action.time}</TableCell>\n                  <TableCell>{action.action}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : (\n        <div className=\"c-empty-container__wrapper\">\n          <img\n            src={emptyBox}\n            className=\"c-empty-container__img\"\n            alt=\"empty icon\"\n          />\n          <p className=\"c-empty-container__text\">Действия отсутствуют</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  actions: state.actions.actions,\n  actionsLoadingStatus: state.actions.actionsLoadingStatus,\n});\n\nexport default connect(mapStateToProps, { getActionsData })(ActionsHistory);\n","import {\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TextField,\n  makeStyles,\n} from '@material-ui/core';\nimport './../../../../assets/styles/main.scss';\nimport { useContext, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Reminder.module.scss';\nimport {\n  getTasksForCurrentDate,\n  setTaskForCurrentDate,\n} from './../../../../store/reducers/calendarReminderReducer';\nimport { useEffect } from 'react';\nimport { AuthContext } from '../../../../context/authContext';\nimport emptyBox from './../../../../assets/images/empty-box.svg';\nimport Preloader from './../../../Main/common/Preloader';\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    overflowY: 'auto',\n    width: '100%',\n    height: '100%',\n    '&::-webkit-scrollbar': {\n      width: '6px',\n    },\n    '&::-webkit-scrollbar-track': {\n      backgroundColor: '#C5DEFB',\n      borderRadius: '5px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: '#60A9E0',\n      borderRadius: '5px',\n    },\n  },\n  cell: {\n    whiteSpace: 'normal',\n    wordBreak: 'break-word',\n  },\n  input: {\n    width: '100%',\n    fontSize: '4em',\n  },\n});\n\nconst Reminder = (props) => {\n  const classes = useStyles();\n  const [task, setTask] = useState('');\n  const [inputError, setInputError] = useState(false);\n  const { user } = useContext(AuthContext);\n  const tasks = [];\n  for (let task in props.tasks) {\n    tasks.push({ task: props.tasks[task], id: task });\n  }\n\n  useEffect(() => {\n    props.getTasksForCurrentDate({\n      id: user.uid,\n      date: props.date.toLocaleDateString('ru').replaceAll('.', '-'),\n    });\n  }, []);\n\n  const onAddTaskHandler = () => {\n    if (!task.trim().length) return;\n    props.setTaskForCurrentDate({\n      id: user.uid,\n      task: task,\n      date: props.date.toLocaleDateString('ru').replaceAll('.', '-'),\n    });\n    setTask('');\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.tableHeadingWrapper}>\n        <div className={styles.tableHeading}>\n          <h2 className={styles.heading}>Напоминания</h2>\n          <p className={styles.date}>{props.date.toLocaleDateString('ru')}</p>\n        </div>\n        {props.addTaskMode ? (\n          <div className={styles.addTaskWrapper}>\n            <TextField\n              size=\"small\"\n              error={inputError}\n              inputProps={{ maxLength: 100 }}\n              className={classes.input}\n              value={task}\n              placeholder=\"Добавить напоминание\"\n              onKeyPress={(e) => {\n                if (e.code === 'Enter') onAddTaskHandler();\n              }}\n              onChange={(e) => {\n                setTask(e.target.value);\n                if (e.target.value.length === 100) setInputError(true);\n                else setInputError(false);\n              }}\n              helperText={inputError ? 'Не более 100 символов' : null}\n            />\n            <button\n              className={styles.addTaskButton}\n              onClick={onAddTaskHandler}\n            ></button>\n          </div>\n        ) : null}\n      </div>\n      {props.isDataLoading ? (\n        <Preloader />\n      ) : tasks.length ? (\n        <TableContainer className={classes.tableContainer}>\n          <Table size=\"small\" stickyHeader>\n            <TableBody>\n              {tasks.map((task) => {\n                return (\n                  <TableRow key={task.id}>\n                    <TableCell className={classes.cell}>{task.task}</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : (\n        <div className=\"c-empty-container__wrapper\">\n          <img\n            src={emptyBox}\n            className=\"c-empty-container__img\"\n            alt=\"empty icon\"\n          />\n          <p className=\"c-empty-container__text\">Напоминаний нет</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  date: state.calendar.date,\n  currentUserId: state.currentUser.id,\n  tasks: state.calendar.tasks,\n  addTaskMode: state.calendar.addTaskMode,\n  isDataLoading: state.calendar.isDataLoading,\n});\n\nexport default connect(mapStateToProps, {\n  setTaskForCurrentDate,\n  getTasksForCurrentDate,\n})(Reminder);\n","import Reminder from './Reminder';\n\nexport default Reminder;\n","import StartPage from './StartPage';\n\nexport default StartPage;\n","import AddNavPanel from '../common/AddNavPanel';\nimport MainCalendar from './MainCalendar';\nimport ActionsHistory from './ActionsHistory';\nimport Reminder from './Reminder';\nimport 'react-calendar/dist/Calendar.css';\nimport styles from './StartPage.module.scss';\nimport './../../../assets/styles/main.scss';\n\nconst StartPage = () => {\n  return (\n    <div className={styles.pageWrapper}>\n      <AddNavPanel className={styles.nav} />\n      <div className={styles.contentWrapper}>\n        <ActionsHistory />\n        <MainCalendar />\n        <Reminder />\n      </div>\n    </div>\n  );\n};\n\nexport default StartPage;\n","import ClientPage from './ClientPage';\n\nexport default ClientPage;\n","import { Formik } from 'formik';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport AddNavPanel from '../../common/AddNavPanel';\nimport {\n  getCurrentClientData,\n  setCurrentClientData,\n} from '../../../../store/reducers/clientReducer';\nimport { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport Preloader from '../../common/Preloader';\nimport { TextField } from '@material-ui/core';\nimport { addClientValidation } from '../clientDataFormProps';\nimport { useRef } from 'react';\nimport styles from './ClientPage.module.scss';\nimport './../../../../assets/styles/main.scss';\nimport classNames from 'classnames';\n\nconst ClientPage = (props) => {\n  const initValues = {\n    surname: props.client.surname,\n    name: props.client.name,\n    patronymic: props.client.patronymic,\n    birthdate: props.client.birthdate.split('.').reverse().join('-'),\n    sex: props.client.sex,\n    id: props.client.id,\n    work: props.client.work,\n    phone: props.client.phone,\n    email: props.client.email,\n    address: props.client.address,\n  };\n  const { clientId } = useParams();\n  const [editMode, setEditMode] = useState(false);\n  useEffect(() => {\n    props.getCurrentClientData(clientId);\n  }, []);\n  const resetRef = useRef();\n  return (\n    <div>\n      <AddNavPanel />\n      {props.isClientLoading ? (\n        <Preloader />\n      ) : (\n        <>\n          <h1>{`${props.client.surname} ${props.client.name} ${props.client.patronymic}`}</h1>\n          <div className={styles.tabsWrapper}>\n            <NavLink\n              to={`/main/clients/${clientId}/data`}\n              className=\"c-add-nav-panel__tab\"\n              activeClassName=\"c-add-nav-panel__tab_active\"\n            >\n              Данные\n            </NavLink>\n          </div>\n          <AddNavPanel>\n            {editMode ? (\n              <div>\n                <button\n                  className=\"c-add-nav-panel__text-button\"\n                  type=\"submit\"\n                  form=\"client-edit-data-form\"\n                >\n                  Сохранить\n                </button>\n                <button\n                  className={classNames(\n                    'c-add-nav-panel__text-button',\n                    'c-add-nav-panel__text-button_cancel'\n                  )}\n                  type=\"button\"\n                  onClick={() => {\n                    setEditMode(false);\n                    resetRef.current?.resetForm();\n                  }}\n                >\n                  Отменить\n                </button>\n              </div>\n            ) : (\n              <button\n                onClick={() => setEditMode(true)}\n                className=\"c-add-nav-panel__text-button\"\n              >\n                Редактировать\n              </button>\n            )}\n          </AddNavPanel>\n          <Formik\n            innerRef={resetRef}\n            initialValues={initValues}\n            validationSchema={addClientValidation()}\n            onSubmit={(values) => {\n              props.setCurrentClientData({\n                id: clientId,\n                client: {\n                  surname: values.surname,\n                  name: values.name,\n                  patronymic: values.patronymic,\n                  birthdate: values.birthdate,\n                  sex: values.sex,\n                  id: values.id,\n                  work: values.work,\n                  phone: values.phone,\n                  email: values.email,\n                  address: values.address,\n                },\n              });\n              setEditMode(false);\n            }}\n          >\n            {(formProps) => {\n              return (\n                <form\n                  className={styles.form}\n                  onSubmit={formProps.handleSubmit}\n                  id=\"client-edit-data-form\"\n                >\n                  <div className={styles.fieldWrapper}>\n                    <span className={styles.inputLabel}>Фамилия</span>\n                    <TextField\n                      className={styles.input}\n                      variant=\"outlined\"\n                      disabled={!editMode}\n                      value={formProps.values.surname}\n                      name=\"surname\"\n                      onChange={formProps.handleChange}\n                      error={Boolean(\n                        formProps.touched.name && formProps.errors.name\n                      )}\n                      helperText={\n                        formProps.touched.name && formProps.errors.name\n                          ? formProps.errors.name\n                          : null\n                      }\n                    />\n                  </div>\n                  <div className={styles.fieldWrapper}>\n                    <span className={styles.inputLabel}>Имя</span>\n                    <TextField\n                      className={styles.input}\n                      variant=\"outlined\"\n                      disabled={!editMode}\n                      value={formProps.values.name}\n                      name=\"name\"\n                      onChange={formProps.handleChange}\n                    />\n                  </div>\n                  <div className={styles.fieldWrapper}>\n                    <span className={styles.inputLabel}>Отчетсво</span>\n                    <TextField\n                      className={styles.input}\n                      variant=\"outlined\"\n                      disabled={!editMode}\n                      value={formProps.values.patronymic}\n                      name=\"patronymic\"\n                      onChange={formProps.handleChange}\n                    />\n                  </div>\n                  <div className={styles.fieldWrapper}>\n                    <span className={styles.inputLabel}>Дата рождения</span>\n                    <TextField\n                      className={styles.input}\n                      variant=\"outlined\"\n                      disabled={!editMode}\n                      value={formProps.values.birthdate}\n                      name=\"birthdate\"\n                      type=\"date\"\n                      onChange={formProps.handleChange}\n                    />\n                  </div>\n                  <div className={styles.fieldWrapper}>\n                    <span className={styles.inputLabel}>Пол</span>\n                    <TextField\n                      className={styles.input}\n                      variant=\"outlined\"\n                      disabled={true}\n                      value={formProps.values.sex}\n                      name=\"sex\"\n                      onChange={formProps.handleChange}\n                    />\n                  </div>\n                  <div className={styles.fieldWrapper}>\n                    <span className={styles.inputLabel}>\n                      Идентификационный номер\n                    </span>\n                    <TextField\n                      className={styles.input}\n                      variant=\"outlined\"\n                      disabled={true}\n                      value={formProps.values.id}\n                      name=\"id\"\n                      onChange={formProps.handleChange}\n                    />\n                  </div>\n                  <div className={styles.fieldWrapper}>\n                    <span className={styles.inputLabel}>Место работы</span>\n                    <TextField\n                      className={styles.input}\n                      variant=\"outlined\"\n                      disabled={!editMode}\n                      value={formProps.values.work}\n                      name=\"work\"\n                      onChange={formProps.handleChange}\n                    />\n                  </div>\n                  <div className={styles.fieldWrapper}>\n                    <span className={styles.inputLabel}>Телефон</span>\n                    <TextField\n                      className={styles.input}\n                      variant=\"outlined\"\n                      disabled={!editMode}\n                      value={formProps.values.phone}\n                      name=\"phone\"\n                      onChange={formProps.handleChange}\n                    />\n                  </div>\n                  <div className={styles.fieldWrapper}>\n                    <span className={styles.inputLabel}>Электронная почта</span>\n                    <TextField\n                      className={styles.input}\n                      variant=\"outlined\"\n                      disabled={!editMode}\n                      value={formProps.values.email}\n                      name=\"email\"\n                      onChange={formProps.handleChange}\n                    />\n                  </div>\n                  <div className={styles.fieldWrapper}>\n                    <span className={styles.inputLabel}>Адрес</span>\n                    <TextField\n                      className={styles.input}\n                      variant=\"outlined\"\n                      disabled={!editMode}\n                      value={formProps.values.address}\n                      name=\"address\"\n                      onChange={formProps.handleChange}\n                    />\n                  </div>\n                </form>\n              );\n            }}\n          </Formik>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  client: state.client.client,\n  isClientLoading: state.client.isClientLoading,\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentClientData,\n  setCurrentClientData,\n})(ClientPage);\n","import Main from './Main';\n\nexport default Main;\n","import { Route } from 'react-router';\nimport Navigation from './Navigation';\nimport Profile from './Profile';\nimport styles from './Main.module.scss';\nimport { AuthContext } from '../../context/authContext';\nimport { useContext } from 'react';\nimport Preloader from './common/Preloader/Preloader';\nimport Clients from './Clients';\nimport StartPage from './StartPage';\nimport ClientPage from './Clients/ClientPage';\n\nconst Main = () => {\n  const { user } = useContext(AuthContext);\n  return user ? (\n    <div className={styles.main__wrapper}>\n      <Navigation />\n      <Route exact path=\"/main\" render={() => <StartPage />} />\n      <Route exact path=\"/main/profile\" render={() => <Profile />} />\n      <Route exact path=\"/main/clients\" render={() => <Clients />} />\n      <Route\n        path=\"/main/clients/:clientId/data\"\n        render={() => <ClientPage />}\n      />\n    </div>\n  ) : (\n    <Preloader />\n  );\n};\n\nexport default Main;\n","import { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { AuthContext } from './context/authContext';\nimport { useContext } from 'react';\nimport Authorization from './components/Authorization';\nimport Registration from './components/Registration';\nimport Main from './components/Main';\nimport Preloader from './components/Main/common/Preloader';\n\nfunction App() {\n  const { user, isCheckingForUser } = useContext(AuthContext);\n  return (\n    <div className=\"App\">\n      {isCheckingForUser ? (\n        <Preloader />\n      ) : (\n        <Switch>\n          <Route exact path=\"/\">\n            {user ? <Redirect to=\"/main\" /> : <Authorization />}\n          </Route>\n          <Route exact path=\"/registration\">\n            {user ? <Redirect to=\"/main\" /> : <Registration />}\n          </Route>\n          <Route path=\"/main\">{user ? <Main /> : <Redirect to=\"/\" />}</Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport Auth from './context/authContext';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Auth>\n          <App />\n        </Auth>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Registration_formWrapper__ZqnAa\",\"form\":\"Registration_form__3H9YO\",\"inputsWrapper\":\"Registration_inputsWrapper__1xvZg\",\"input\":\"Registration_input__3rLPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1MVH4\",\"navigation__item\":\"Navigation_navigation__item__3vPOz\",\"workBlocks\":\"Navigation_workBlocks__XyYNF\",\"profileBlock\":\"Navigation_profileBlock__18OvU\",\"active\":\"Navigation_active__j9SgC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchFormWrapper\":\"SearchClient_searchFormWrapper__1E6xZ\",\"resetButton\":\"SearchClient_resetButton__20aIb\",\"resetButtonImg\":\"SearchClient_resetButtonImg__2viD4\",\"form\":\"SearchClient_form__2Fbno\",\"formInput\":\"SearchClient_formInput__1YI5J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Reminder_wrapper__1fpwF\",\"tableHeading\":\"Reminder_tableHeading__T9yNF\",\"tableHeadingWrapper\":\"Reminder_tableHeadingWrapper__1a6Eo\",\"heading\":\"Reminder_heading__12LXo\",\"date\":\"Reminder_date__2hgMo\",\"addTaskWrapper\":\"Reminder_addTaskWrapper__2JgXJ\",\"addTaskButton\":\"Reminder_addTaskButton__19OG1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__wrapper\":\"Profile_profile__wrapper__2ztAw\",\"profile__exitButton\":\"Profile_profile__exitButton__1RAUo\",\"profile__dataWrapper\":\"Profile_profile__dataWrapper__2iyQe\",\"profile__dataHeading\":\"Profile_profile__dataHeading__2_6-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Clients_wrapper__2uT-V\",\"panelButton\":\"Clients_panelButton__2PnjW\",\"addClientButton\":\"Clients_addClientButton__2iRxE\",\"searchClientButton\":\"Clients_searchClientButton__2JJZ_\"};"],"sourceRoot":""}